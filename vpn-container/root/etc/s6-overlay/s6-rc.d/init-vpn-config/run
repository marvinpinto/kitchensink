#!/usr/bin/with-contenv bash

echo "[vpn-config] Initializing vpn configuration.."

function set_default() {
  var_name=$1
  var_value=$2

  if [[ -z "${!var_name}" ]]; then
    printf '%s' "${var_value}" > /run/s6/container_environment/${var_name}
  fi
}

# Configure gluetun & the shadowsocks server
printf '%s' "on" > /run/s6/container_environment/SHADOWSOCKS
printf '%s' "off" > /run/s6/container_environment/SHADOWSOCKS_LOG
printf '%s' "0.0.0.0:8388" > /run/s6/container_environment/SHADOWSOCKS_LISTENING_ADDRESS

# gluetun shadowsocks server config
ss_cipher="${SHADOWSOCKS_CIPHER:-aes-256-gcm}"
printf '%s' "${ss_cipher}" > /run/s6/container_environment/SHADOWSOCKS_CIPHER
random_shadowsocks_pwd=$(openssl rand -hex 20)
ss_pwd="${SHADOWSOCKS_PASSWORD:-$random_shadowsocks_pwd}"
printf '%s' "${ss_pwd}" > /run/s6/container_environment/SHADOWSOCKS_PASSWORD

# shadowsocks local (client) config
cat << EOF > /etc/sslocal-config.json
{
  "server": "127.0.0.1",
  "server_port": 8388,
  "local_address": "0.0.0.0",
  "local_port": 8888,
  "mode": "tcp_and_udp",
  "method": "${ss_cipher}",
  "password": "${ss_pwd}"
}
EOF

# There is a weird bug atm that I observed as follows: if you supply the
# PUID/PGID, gluetun will first create the unbound.conf as the root user, but
# will attempt to run unbound as the PUID user. This results in unbound failing
# with permission issues as (I guess?) it's trying to write to the config files
# in /etc/unbound. I tried a few things to work around it but nothing seems to
# stick ðŸ¤·
set_default PUID "0"
set_default PGID "0"

##################################
# gluetun defaults:
# - https://github.com/qdm12/gluetun/blob/v3.38.0/Dockerfile
##################################
set_default VPN_SERVICE_PROVIDER "pia"
set_default VPN_TYPE "openvpn"
set_default VPN_INTERFACE "tun0"
set_default OPENVPN_PROTOCOL "udp"
set_default OPENVPN_USER_SECRETFILE "/run/secrets/openvpn_user"
set_default OPENVPN_PASSWORD_SECRETFILE "/run/secrets/openvpn_password"
set_default OPENVPN_VERSION "2.5"
set_default OPENVPN_VERBOSITY "1"
set_default OPENVPN_PROCESS_USER "root"
set_default WIREGUARD_CONF_SECRETFILE "/run/secrets/wg0.conf"
set_default WIREGUARD_PRIVATE_KEY_SECRETFILE "/run/secrets/wireguard_private_key"
set_default WIREGUARD_PRESHARED_KEY_SECRETFILE "/run/secrets/wireguard_preshared_key"
set_default WIREGUARD_ADDRESSES_SECRETFILE "/run/secrets/wireguard_addresses"
set_default WIREGUARD_MTU "1320"
set_default WIREGUARD_IMPLEMENTATION "auto"
set_default OWNED_ONLY "no"
set_default VPN_PORT_FORWARDING "off"
set_default VPN_PORT_FORWARDING_LISTENING_PORT "0"
set_default VPN_PORT_FORWARDING_STATUS_FILE "/tmp/gluetun/forwarded_port"
set_default OPENVPN_CLIENTCRT_SECRETFILE "/run/secrets/openvpn_clientcrt"
set_default OPENVPN_CLIENTKEY_SECRETFILE "/run/secrets/openvpn_clientkey"
set_default OPENVPN_ENCRYPTED_KEY_SECRETFILE "/run/secrets/openvpn_encrypted_key"
set_default OPENVPN_KEY_PASSPHRASE_SECRETFILE "/run/secrets/openvpn_key_passphrase"
set_default FIREWALL "on"
set_default FIREWALL_DEBUG "off"
set_default LOG_LEVEL "info"
set_default HEALTH_SERVER_ADDRESS "127.0.0.1:9999"
set_default HEALTH_TARGET_ADDRESS "cloudflare.com:443"
set_default HEALTH_SUCCESS_WAIT_DURATION "5s"
set_default HEALTH_VPN_DURATION_INITIAL "6s"
set_default HEALTH_VPN_DURATION_ADDITION "5s"
set_default DOT "on"
set_default DOT_PROVIDERS "cloudflare"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default VARIABLE "value"
set_default DOT_PRIVATE_ADDRESS "127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112"
set_default DOT_CACHING "on"
set_default DOT_IPV6 "off"
set_default BLOCK_MALICIOUS "on"
set_default BLOCK_SURVEILLANCE "off"
set_default BLOCK_ADS "off"
set_default DNS_UPDATE_PERIOD "24h"
set_default DNS_ADDRESS "127.0.0.1"
set_default DNS_KEEP_NAMESERVER "off"
set_default HTTPPROXY_LOG "off"
set_default HTTPPROXY_LISTENING_ADDRESS ":8888"
set_default HTTPPROXY_STEALTH "off"
set_default HTTPPROXY_USER_SECRETFILE "/run/secrets/httpproxy_user"
set_default HTTPPROXY_PASSWORD_SECRETFILE "/run/secrets/httpproxy_password"
set_default SHADOWSOCKS_PASSWORD_SECRETFILE "/run/secrets/shadowsocks_password"
set_default HTTP_CONTROL_SERVER_LOG "on"
set_default HTTP_CONTROL_SERVER_ADDRESS ":8000"
set_default UPDATER_PERIOD "0"
set_default UPDATER_MIN_RATIO "0.8"
set_default PUBLICIP_FILE "/tmp/gluetun/ip"
set_default PUBLICIP_ENABLED "on"
set_default PUBLICIP_API "cloudflare,ipinfo,ifconfigco,ip2location"
set_default PPROF_ENABLED "no"
set_default PPROF_BLOCK_PROFILE_RATE "0"
set_default PPROF_MUTEX_PROFILE_RATE "0"
set_default PPROF_HTTP_SERVER_ADDRESS ":6060"
set_default VERSION_INFORMATION "on"

echo "[vpn-config] Updating gluetun VPN server list.."
/usr/local/bin/gluetun update -enduser -providers protonvpn
/usr/local/bin/gluetun update -enduser -providers windscribe

echo "[vpn-config] Installing dnsbl-checker.py.."
cp /etc/dnsbl-checker.py /usr/local/bin/dnsbl-checker
chmod 0755 /usr/local/bin/dnsbl-checker
apk add --update --no-cache python3 py3-pip
ln -sf python3 /usr/bin/python
pip install --break-system-packages --root-user-action=ignore requests dnspython

# gluetun api auth config
mkdir -p /gluetun/auth
cat << EOF > /gluetun/auth/config.toml
[[roles]]
name = "control-server"
# Define a list of routes with the syntax "Http-Method /path"
routes = ["GET /v1/publicip/ip", "GET /v1/openvpn/portforwarded"]
auth = "none"
EOF

echo "[vpn-config] VPN configuration complete"

# vi: set ft=bash:
