# vim: set filetype=sh :

# Set the AWS vault backend
export AWS_VAULT_BACKEND=file

# Use system aws-vault completions for the 'av' alias
if [ -e "${HOMEBREW_PREFIX}/etc/bash_completion.d/aws-vault.bash" ]; then
  source ${HOMEBREW_PREFIX}/etc/bash_completion.d/aws-vault.bash
fi

# aws-vault helper for some sub-commands (with an MFA token)
function av() {
  local cmd=$1

  if [ -z "$OP_AWS_MFA_NAME" ]; then
    echo "This utility needs the OP_AWS_MFA_NAME environment variable"
    return 1
  fi

  if [[ -z "$cmd" || ("$cmd" != "init" && "$cmd" != "login" && "$cmd" != "check") ]]; then
    echo "usage: av <init | login | check>"
    return 1
  fi

  OP_ACCT=$(op account list > /dev/null 2>&1)
  if [[ $? != 0 ]]; then
    echo "1password session does not appear to be active, try signing in again"
    return 1
  fi

  local avp=$(op item get --format=json --vault="Private" "$OP_AWS_MFA_NAME" | jq -r '.fields[] | select(.label == "AWS_VAULT_FILE_PASSPHRASE") | .value')
  if [ "$?" -ne 0 ]; then
    echo "Failed to retrieve AWS_VAULT_FILE_PASSPHRASE"
    return 1
  fi
  export AWS_VAULT_FILE_PASSPHRASE="$avp"

  if [[ "$cmd" == "init" ]]; then
    local profile=$2
    if [[ -z "$profile" ]]; then
      echo "usage: av init <aws_profile_name>"
      return 1
    fi

    # initialize the ~/.aws/config file if needed
    if [[ ! -f "${HOME}/.aws/config" ]]; then
      mkdir -p "${HOME}/.aws"
      chmod 0700 "${HOME}/.aws"
      local data=$(op item get --format=json --vault="Private" "dotfiles-secrets-aws-config" | jq -r '.fields[] | select(.id == "notesPlain") | .value')
      printf '%b' "$data" > "${HOME}/.aws/config"
    fi

    aws-vault add $profile
  fi

  if [[ "$cmd" == "login" ]]; then
    local profile=$2
    if [[ -z "$profile" ]]; then
      echo "usage: av login <aws_profile_name>"
      return 1
    fi

    aws-vault login --mfa-token=$(op item get "$OP_AWS_MFA_NAME" --otp) --stdout $profile
  fi

  if [[ "$cmd" == "check" ]]; then
    local profile=$2
    if [[ -z "$profile" ]]; then
      echo "usage: av check <aws_profile_name>"
      return 1
    fi

    aws-vault exec --mfa-token=$(op item get "$OP_AWS_MFA_NAME" --otp) $profile -- aws sts get-caller-identity
  fi
}

function _av_completion() {
  local cur prev
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "init login check" -- ${cur}) )
  return 0
}
complete -F _av_completion av

# aws-vault helper to directly execute commands with an MFA token
function ave() {
  if [ -z "$OP_AWS_MFA_NAME" ]; then
    echo "This utility needs the OP_AWS_MFA_NAME environment variable"
    return 1
  fi

  OP_ACCT=$(op account list > /dev/null 2>&1)
  if [[ $? != 0 ]]; then
    echo "1password session does not appear to be active, try signing in again"
    return 1
  fi

  local avp=$(op item get --format=json --vault="Private" "$OP_AWS_MFA_NAME" | jq -r '.fields[] | select(.label == "AWS_VAULT_FILE_PASSPHRASE") | .value')
  if [ "$?" -eq 0 ]; then
    export AWS_VAULT_FILE_PASSPHRASE="$avp"
  fi

  aws-vault exec --mfa-token=$(op item get "$OP_AWS_MFA_NAME" --otp) $@
}
